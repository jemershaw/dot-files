# Use vim bindings
set-window-option -g mode-keys vi

# use the linked ssh_agent path
set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock

# Utilize ctrl+a instead of ctrl+b(same as screen)
set -g prefix C-a
unbind C-b
bind C-a send-prefix

#Passthrough prefix
unbind-key C-q
bind-key -n C-q send-prefix

# Monitor Activity
bind m set-window-option monitor-activity
set -g visual-activity on

# Misc
set -sg escape-time 1
bind Space choose-buffer
bind-key L command-prompt -p "layout: " "source-file ~/.tmux/layouts/%%"
bind-key tab next-layout

# Enable automatic window renaming to the running command.
setw -g automatic-rename on
setw -g allow-rename off

# Set the Terminal's window title
set -g set-titles on
set -g set-titles-string "tmux(#S:#I) #W"

# Allow sending Control-L to clear the screen
bind C-l send C-l

# To copy/select to system use(opt/alt) and highlight
set -g mouse off

bind S new-session
bind X kill-session

# Vimish naviation
bind h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim || tmux display-message -p #{window_flags} | grep -iq Z && tmux send-keys C-h) || tmux select-pane -L"
bind j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim || tmux display-message -p #{window_flags} | grep -iq Z && tmux send-keys C-j) || tmux select-pane -D"
bind k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim || tmux display-message -p #{window_flags} | grep -iq Z && tmux send-keys C-k) || tmux select-pane -U"
bind l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim || tmux display-message -p #{window_flags} | grep -iq Z && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim || tmux display-message -p #{window_flags} | grep -iq Z && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim || tmux display-message -p #{window_flags} | grep -iq Z && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim || tmux display-message -p #{window_flags} | grep -iq Z && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim || tmux display-message -p #{window_flags} | grep -iq Z && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# clear scrollback history
bind C-k clear-history

# Tmux alternative to hardcopy :(
bind H capture-pane \; save-buffer -b 0 ~/tmux.hardcopy \; delete-buffer -b 0

# quick pane cycling
unbind ^w
bind ^w select-pane -t :.+

# These are dvorak-isms...
bind r select-pane -t :.+
bind C-r rotate-window

# Support ctl-a P for paste
bind P paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Splitting
bind | split-window -h
bind = split-window -v

# set terminal
set -g default-terminal "screen-256color"

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

# Make active pane border blue
set -g pane-active-border-fg colour1

# Status bar.
set -g status-interval 60
set-option -g status-justify left
set-option -g display-panes-time 1500
set-option -g display-time 3000

#Set the left and right status
set -g status-left '#[bg=colour7]#[fg=colour0]#{?client_prefix,#[bg=colour2],} ❐ #S #[bg=colour8]#[fg=colour7]#{?client_prefix,#[fg=colour2],}'
set -g status-right '#[fg=colour2]ⓦ #(curl v4.ifconfig.co) #[fg=colour1]#[fg=white] %b %d %Y %H:%M '

set -g status-bg black
set -g status-fg white

setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg blue
setw -g window-status-current-attr bright

set -g pane-border-fg blue
set -g pane-border-bg black
set -g pane-active-border-fg blue
set -g pane-active-border-bg blue

# Integrate with OS X pasteboard.
set -g default-shell $SHELL
# MacOS copy to clipboard
if-shell "uname -s | grep -q Darwin" 'set -g default-command "reattach-to-user-namespace -l ${SHELL}"'

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'


bind-key ! break-pane -d -n _hidden_pane
bind-key @ join-pane -s $.1
